x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  init:
    restart: "no"
    build:
      context: ./init
      dockerfile: Dockerfile
    image: init:merlin
    user: 1000:1000
    pull_policy: never
    environment:
      - SNAPSHOT=${SNAPSHOT:-}
    volumes:
      - erigon-data:/tmp/cdk-erigon
      - /etc/localtime:/etc/localtime:ro

  cdk-erigon:
    image: ${DOCKER_REPO}:${DOCKER_TAG}
    stop_grace_period: 600s
    user: 1000:1000
    restart: unless-stopped
    environment:
      - CDK_ERIGON_SEQUENCER=0
    volumes:
      - ./merlin/${NETWORK}/config-rpc.yaml:/usr/src/app/config.yaml
      - ./merlin/${NETWORK}/dynamic-merlinmainnet-allocs.json:/usr/src/app/dynamic-merlinmainnet-allocs.json
      - ./merlin/${NETWORK}/dynamic-merlinmainnet-chainspec.json:/usr/src/app/dynamic-merlinmainnet-chainspec.json
      - ./merlin/${NETWORK}/dynamic-merlinmainnet-conf.json:/usr/src/app/dynamic-merlinmainnet-conf.json
      - erigon-data:/usr/src/app/data
    command: >
      --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml ${ERIGON_EXTRAS:-}
    labels:
      - metrics.scrape=true
      - metrics.port=6060
      - metrics.path=/debug/metrics/prometheus
      - metrics.network=merlin-${NETWORK}
      - traefik.enable=true

      - traefik.http.routers.${RPC_HOST}.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}.rule=Host(`${RPC_HOST}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST}lb.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}lb.rule=Host(`${RPC_LB}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST}.loadbalancer.server.port=8123

      - traefik.http.routers.${WS_HOST}.service=${WS_HOST}
      - traefik.http.routers.${WS_HOST}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST}.rule=Host(`${WS_HOST}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST}lb.service=${WS_HOST}
      - traefik.http.routers.${WS_HOST}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST}lb.rule=Host(`${WS_LB}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST}.loadbalancer.server.port=6990   
    <<: *logging

volumes:
  erigon-data:
